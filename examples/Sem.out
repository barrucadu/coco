-- compact
         wait @ 0  ===  wait @ 0 >> wait @ 0
         wait @ 0  ===  signal @ 0 >> wait @ 0
         wait @ 0  ===  signal @ 1 >> wait @ 1
         wait @ 0  ->-  signal @ x >> wait @ x
         wait @ 0  ===  wait @ 0 >> signal @ 0
         wait @ 0  ===  remaining @ >> wait @ 0
         wait @ 0  ===  wait @ 0 >> remaining @
         wait @ 0  ===  signal @ 0 >> signal @ 0
         wait @ 0  ===  (wait @ 0) ||| (wait @ 0)
         wait @ 0  ===  remaining @ >> signal @ 0
         wait @ 0  ===  signal @ 0 >> remaining @
         wait @ 0  ===  (signal @ 0) ||| (wait @ 0)
         wait @ 0  ===  (signal @ 1) ||| (wait @ 1)
         wait @ 0  ->-  (signal @ x) ||| (wait @ x)
         wait @ 0  ===  (remaining @) ||| (wait @ 0)
         wait @ 0  ===  (signal @ 0) ||| (signal @ 0)
         wait @ 0  ===  (remaining @) ||| (signal @ 0)
         wait @ 1  ===  wait @ 0 >> wait @ 1
         wait @ 1  ===  wait @ 1 >> wait @ 0
         wait @ 1  ===  signal @ 0 >> wait @ 1
         wait @ 1  ===  wait @ 1 >> signal @ 0
         wait @ 1  ===  remaining @ >> wait @ 1
         wait @ 1  ===  wait @ 1 >> remaining @
         wait @ 1  ===  (wait @ 0) ||| (wait @ 1)
         wait @ 1  ===  (signal @ 0) ||| (wait @ 1)
         wait @ 1  ===  (remaining @) ||| (wait @ 1)
         wait @ x  ===  wait @ 0 >> wait @ x
         wait @ x  ===  wait @ x >> wait @ 0
         wait @ x  ===  signal @ 0 >> wait @ x
         wait @ x  ===  wait @ x >> signal @ 0
         wait @ x  ===  remaining @ >> wait @ x
         wait @ x  ===  wait @ x >> remaining @
         wait @ x  ===  (wait @ 0) ||| (wait @ x)
         wait @ x  ->-  (signal @ 0) ||| (wait @ x)
         wait @ x  ===  (remaining @) ||| (wait @ x)
       signal @ 0  ===  wait @ 0 >> wait @ 0
       signal @ 0  ===  signal @ 0 >> wait @ 0
       signal @ 0  ===  signal @ 1 >> wait @ 1
       signal @ 0  ->-  signal @ x >> wait @ x
       signal @ 0  ===  wait @ 0 >> signal @ 0
       signal @ 0  ===  remaining @ >> wait @ 0
       signal @ 0  ===  wait @ 0 >> remaining @
       signal @ 0  ===  signal @ 0 >> signal @ 0
       signal @ 0  ===  (wait @ 0) ||| (wait @ 0)
       signal @ 0  ===  remaining @ >> signal @ 0
       signal @ 0  ===  signal @ 0 >> remaining @
       signal @ 0  ===  (signal @ 0) ||| (wait @ 0)
       signal @ 0  ===  (signal @ 1) ||| (wait @ 1)
       signal @ 0  ->-  (signal @ x) ||| (wait @ x)
       signal @ 0  ===  (remaining @) ||| (wait @ 0)
       signal @ 0  ===  (signal @ 0) ||| (signal @ 0)
       signal @ 0  ===  (remaining @) ||| (signal @ 0)
       signal @ 1  ===  wait @ (0 - 1)
       signal @ 1  ===  signal @ 1 >> wait @ 0
       signal @ 1  ===  wait @ 0 >> signal @ 1
       signal @ 1  ===  signal @ 0 >> signal @ 1
       signal @ 1  ===  signal @ 1 >> signal @ 0
       signal @ 1  ===  remaining @ >> signal @ 1
       signal @ 1  ===  signal @ 1 >> remaining @
       signal @ 1  ===  (signal @ 1) ||| (wait @ 0)
       signal @ 1  ===  (signal @ 0) ||| (signal @ 1)
       signal @ 1  ===  (remaining @) ||| (signal @ 1)
       signal @ x  ===  wait @ 0 >> signal @ x
       signal @ x  ===  signal @ 0 >> signal @ x
       signal @ x  ===  signal @ x >> signal @ 0
       signal @ x  ===  remaining @ >> signal @ x
       signal @ x  ===  signal @ x >> remaining @
       signal @ x  ->-  (signal @ x) ||| (wait @ 0)
       signal @ x  ===  (signal @ 0) ||| (signal @ x)
       signal @ x  ===  (remaining @) ||| (signal @ x)
 signal @ (1 + 1)  ===  wait @ ((0 - 1) - 1)
 signal @ (1 + 1)  ===  wait @ (0 - (1 + 1))
 signal @ (1 + 1)  ===  signal @ 1 >> signal @ 1
 signal @ (1 + 1)  ===  (signal @ 1) ||| (signal @ 1)
 signal @ (1 + x)  ===  signal @ 1 >> signal @ x
 signal @ (1 + x)  ->-  signal @ x >> signal @ 1
 signal @ (1 + x)  ->-  (signal @ 1) ||| (signal @ x)
 signal @ (x + x)  ===  signal @ x >> signal @ x
 signal @ (x + x)  ===  (signal @ x) ||| (signal @ x)
signal @ (x + x1)  ->-  signal @ x >> signal @ x1
signal @ (x + x1)  ->-  (signal @ x) ||| (signal @ x1)

-- plain
check $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> wait h0 0 >> wait h0 0)
check $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> signal h0 0 >> wait h0 0)
check $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> signal h0 1 >> wait h0 1)
check $ \x -> sigL (\h0 -> wait h0 0) ->- sigL (\h0 -> signal h0 x >> wait h0 x)
check $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> wait h0 0 >> signal h0 0)
check $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> remaining h0 >> wait h0 0)
check $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> wait h0 0 >> remaining h0)
check $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> signal h0 0 >> signal h0 0)
check $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> (wait h0 0) ||| (wait h0 0))
check $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> remaining h0 >> signal h0 0)
check $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> signal h0 0 >> remaining h0)
check $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> (signal h0 0) ||| (wait h0 0))
check $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> (signal h0 1) ||| (wait h0 1))
check $ \x -> sigL (\h0 -> wait h0 0) ->- sigL (\h0 -> (signal h0 x) ||| (wait h0 x))
check $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> (remaining h0) ||| (wait h0 0))
check $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> (signal h0 0) ||| (signal h0 0))
check $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> (remaining h0) ||| (signal h0 0))
check $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> wait h0 0 >> wait h0 1)
check $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> wait h0 1 >> wait h0 0)
check $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> signal h0 0 >> wait h0 1)
check $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> wait h0 1 >> signal h0 0)
check $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> remaining h0 >> wait h0 1)
check $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> wait h0 1 >> remaining h0)
check $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> (wait h0 0) ||| (wait h0 1))
check $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> (signal h0 0) ||| (wait h0 1))
check $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> (remaining h0) ||| (wait h0 1))
check $ \x -> sigL (\h0 -> wait h0 x) === sigL (\h0 -> wait h0 0 >> wait h0 x)
check $ \x -> sigL (\h0 -> wait h0 x) === sigL (\h0 -> wait h0 x >> wait h0 0)
check $ \x -> sigL (\h0 -> wait h0 x) === sigL (\h0 -> signal h0 0 >> wait h0 x)
check $ \x -> sigL (\h0 -> wait h0 x) === sigL (\h0 -> wait h0 x >> signal h0 0)
check $ \x -> sigL (\h0 -> wait h0 x) === sigL (\h0 -> remaining h0 >> wait h0 x)
check $ \x -> sigL (\h0 -> wait h0 x) === sigL (\h0 -> wait h0 x >> remaining h0)
check $ \x -> sigL (\h0 -> wait h0 x) === sigL (\h0 -> (wait h0 0) ||| (wait h0 x))
check $ \x -> sigL (\h0 -> wait h0 x) ->- sigL (\h0 -> (signal h0 0) ||| (wait h0 x))
check $ \x -> sigL (\h0 -> wait h0 x) === sigL (\h0 -> (remaining h0) ||| (wait h0 x))
check $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> wait h0 0 >> wait h0 0)
check $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> signal h0 0 >> wait h0 0)
check $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> signal h0 1 >> wait h0 1)
check $ \x -> sigL (\h0 -> signal h0 0) ->- sigL (\h0 -> signal h0 x >> wait h0 x)
check $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> wait h0 0 >> signal h0 0)
check $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> remaining h0 >> wait h0 0)
check $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> wait h0 0 >> remaining h0)
check $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> signal h0 0 >> signal h0 0)
check $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> (wait h0 0) ||| (wait h0 0))
check $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> remaining h0 >> signal h0 0)
check $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> signal h0 0 >> remaining h0)
check $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> (signal h0 0) ||| (wait h0 0))
check $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> (signal h0 1) ||| (wait h0 1))
check $ \x -> sigL (\h0 -> signal h0 0) ->- sigL (\h0 -> (signal h0 x) ||| (wait h0 x))
check $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> (remaining h0) ||| (wait h0 0))
check $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> (signal h0 0) ||| (signal h0 0))
check $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> (remaining h0) ||| (signal h0 0))
check $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> wait h0 (0 - 1))
check $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> signal h0 1 >> wait h0 0)
check $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> wait h0 0 >> signal h0 1)
check $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> signal h0 0 >> signal h0 1)
check $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> signal h0 1 >> signal h0 0)
check $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> remaining h0 >> signal h0 1)
check $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> signal h0 1 >> remaining h0)
check $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> (signal h0 1) ||| (wait h0 0))
check $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> (signal h0 0) ||| (signal h0 1))
check $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> (remaining h0) ||| (signal h0 1))
check $ \x -> sigL (\h0 -> signal h0 x) === sigL (\h0 -> wait h0 0 >> signal h0 x)
check $ \x -> sigL (\h0 -> signal h0 x) === sigL (\h0 -> signal h0 0 >> signal h0 x)
check $ \x -> sigL (\h0 -> signal h0 x) === sigL (\h0 -> signal h0 x >> signal h0 0)
check $ \x -> sigL (\h0 -> signal h0 x) === sigL (\h0 -> remaining h0 >> signal h0 x)
check $ \x -> sigL (\h0 -> signal h0 x) === sigL (\h0 -> signal h0 x >> remaining h0)
check $ \x -> sigL (\h0 -> signal h0 x) ->- sigL (\h0 -> (signal h0 x) ||| (wait h0 0))
check $ \x -> sigL (\h0 -> signal h0 x) === sigL (\h0 -> (signal h0 0) ||| (signal h0 x))
check $ \x -> sigL (\h0 -> signal h0 x) === sigL (\h0 -> (remaining h0) ||| (signal h0 x))
check $ sigL (\h0 -> signal h0 (1 + 1)) === sigL (\h0 -> wait h0 ((0 - 1) - 1))
check $ sigL (\h0 -> signal h0 (1 + 1)) === sigL (\h0 -> wait h0 (0 - (1 + 1)))
check $ sigL (\h0 -> signal h0 (1 + 1)) === sigL (\h0 -> signal h0 1 >> signal h0 1)
check $ sigL (\h0 -> signal h0 (1 + 1)) === sigL (\h0 -> (signal h0 1) ||| (signal h0 1))
check $ \x -> sigL (\h0 -> signal h0 (1 + x)) === sigL (\h0 -> signal h0 1 >> signal h0 x)
check $ \x -> sigL (\h0 -> signal h0 (1 + x)) ->- sigL (\h0 -> signal h0 x >> signal h0 1)
check $ \x -> sigL (\h0 -> signal h0 (1 + x)) ->- sigL (\h0 -> (signal h0 1) ||| (signal h0 x))
check $ \x -> sigL (\h0 -> signal h0 (x + x)) === sigL (\h0 -> signal h0 x >> signal h0 x)
check $ \x -> sigL (\h0 -> signal h0 (x + x)) === sigL (\h0 -> (signal h0 x) ||| (signal h0 x))
check $ \x x1 -> sigL (\h0 -> signal h0 (x + x1)) ->- sigL (\h0 -> signal h0 x >> signal h0 x1)
check $ \x x1 -> sigL (\h0 -> signal h0 (x + x1)) ->- sigL (\h0 -> (signal h0 x) ||| (signal h0 x1))

-- hunit/tasty
testProperty "name" $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> wait h0 0 >> wait h0 0)
testProperty "name" $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> signal h0 0 >> wait h0 0)
testProperty "name" $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> signal h0 1 >> wait h0 1)
testProperty "name" $ \x -> sigL (\h0 -> wait h0 0) ->- sigL (\h0 -> signal h0 x >> wait h0 x)
testProperty "name" $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> wait h0 0 >> signal h0 0)
testProperty "name" $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> remaining h0 >> wait h0 0)
testProperty "name" $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> wait h0 0 >> remaining h0)
testProperty "name" $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> signal h0 0 >> signal h0 0)
testProperty "name" $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> (wait h0 0) ||| (wait h0 0))
testProperty "name" $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> remaining h0 >> signal h0 0)
testProperty "name" $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> signal h0 0 >> remaining h0)
testProperty "name" $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> (signal h0 0) ||| (wait h0 0))
testProperty "name" $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> (signal h0 1) ||| (wait h0 1))
testProperty "name" $ \x -> sigL (\h0 -> wait h0 0) ->- sigL (\h0 -> (signal h0 x) ||| (wait h0 x))
testProperty "name" $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> (remaining h0) ||| (wait h0 0))
testProperty "name" $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> (signal h0 0) ||| (signal h0 0))
testProperty "name" $ sigL (\h0 -> wait h0 0) === sigL (\h0 -> (remaining h0) ||| (signal h0 0))
testProperty "name" $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> wait h0 0 >> wait h0 1)
testProperty "name" $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> wait h0 1 >> wait h0 0)
testProperty "name" $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> signal h0 0 >> wait h0 1)
testProperty "name" $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> wait h0 1 >> signal h0 0)
testProperty "name" $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> remaining h0 >> wait h0 1)
testProperty "name" $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> wait h0 1 >> remaining h0)
testProperty "name" $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> (wait h0 0) ||| (wait h0 1))
testProperty "name" $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> (signal h0 0) ||| (wait h0 1))
testProperty "name" $ sigL (\h0 -> wait h0 1) === sigL (\h0 -> (remaining h0) ||| (wait h0 1))
testProperty "name" $ \x -> sigL (\h0 -> wait h0 x) === sigL (\h0 -> wait h0 0 >> wait h0 x)
testProperty "name" $ \x -> sigL (\h0 -> wait h0 x) === sigL (\h0 -> wait h0 x >> wait h0 0)
testProperty "name" $ \x -> sigL (\h0 -> wait h0 x) === sigL (\h0 -> signal h0 0 >> wait h0 x)
testProperty "name" $ \x -> sigL (\h0 -> wait h0 x) === sigL (\h0 -> wait h0 x >> signal h0 0)
testProperty "name" $ \x -> sigL (\h0 -> wait h0 x) === sigL (\h0 -> remaining h0 >> wait h0 x)
testProperty "name" $ \x -> sigL (\h0 -> wait h0 x) === sigL (\h0 -> wait h0 x >> remaining h0)
testProperty "name" $ \x -> sigL (\h0 -> wait h0 x) === sigL (\h0 -> (wait h0 0) ||| (wait h0 x))
testProperty "name" $ \x -> sigL (\h0 -> wait h0 x) ->- sigL (\h0 -> (signal h0 0) ||| (wait h0 x))
testProperty "name" $ \x -> sigL (\h0 -> wait h0 x) === sigL (\h0 -> (remaining h0) ||| (wait h0 x))
testProperty "name" $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> wait h0 0 >> wait h0 0)
testProperty "name" $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> signal h0 0 >> wait h0 0)
testProperty "name" $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> signal h0 1 >> wait h0 1)
testProperty "name" $ \x -> sigL (\h0 -> signal h0 0) ->- sigL (\h0 -> signal h0 x >> wait h0 x)
testProperty "name" $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> wait h0 0 >> signal h0 0)
testProperty "name" $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> remaining h0 >> wait h0 0)
testProperty "name" $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> wait h0 0 >> remaining h0)
testProperty "name" $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> signal h0 0 >> signal h0 0)
testProperty "name" $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> (wait h0 0) ||| (wait h0 0))
testProperty "name" $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> remaining h0 >> signal h0 0)
testProperty "name" $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> signal h0 0 >> remaining h0)
testProperty "name" $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> (signal h0 0) ||| (wait h0 0))
testProperty "name" $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> (signal h0 1) ||| (wait h0 1))
testProperty "name" $ \x -> sigL (\h0 -> signal h0 0) ->- sigL (\h0 -> (signal h0 x) ||| (wait h0 x))
testProperty "name" $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> (remaining h0) ||| (wait h0 0))
testProperty "name" $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> (signal h0 0) ||| (signal h0 0))
testProperty "name" $ sigL (\h0 -> signal h0 0) === sigL (\h0 -> (remaining h0) ||| (signal h0 0))
testProperty "name" $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> wait h0 (0 - 1))
testProperty "name" $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> signal h0 1 >> wait h0 0)
testProperty "name" $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> wait h0 0 >> signal h0 1)
testProperty "name" $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> signal h0 0 >> signal h0 1)
testProperty "name" $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> signal h0 1 >> signal h0 0)
testProperty "name" $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> remaining h0 >> signal h0 1)
testProperty "name" $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> signal h0 1 >> remaining h0)
testProperty "name" $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> (signal h0 1) ||| (wait h0 0))
testProperty "name" $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> (signal h0 0) ||| (signal h0 1))
testProperty "name" $ sigL (\h0 -> signal h0 1) === sigL (\h0 -> (remaining h0) ||| (signal h0 1))
testProperty "name" $ \x -> sigL (\h0 -> signal h0 x) === sigL (\h0 -> wait h0 0 >> signal h0 x)
testProperty "name" $ \x -> sigL (\h0 -> signal h0 x) === sigL (\h0 -> signal h0 0 >> signal h0 x)
testProperty "name" $ \x -> sigL (\h0 -> signal h0 x) === sigL (\h0 -> signal h0 x >> signal h0 0)
testProperty "name" $ \x -> sigL (\h0 -> signal h0 x) === sigL (\h0 -> remaining h0 >> signal h0 x)
testProperty "name" $ \x -> sigL (\h0 -> signal h0 x) === sigL (\h0 -> signal h0 x >> remaining h0)
testProperty "name" $ \x -> sigL (\h0 -> signal h0 x) ->- sigL (\h0 -> (signal h0 x) ||| (wait h0 0))
testProperty "name" $ \x -> sigL (\h0 -> signal h0 x) === sigL (\h0 -> (signal h0 0) ||| (signal h0 x))
testProperty "name" $ \x -> sigL (\h0 -> signal h0 x) === sigL (\h0 -> (remaining h0) ||| (signal h0 x))
testProperty "name" $ sigL (\h0 -> signal h0 (1 + 1)) === sigL (\h0 -> wait h0 ((0 - 1) - 1))
testProperty "name" $ sigL (\h0 -> signal h0 (1 + 1)) === sigL (\h0 -> wait h0 (0 - (1 + 1)))
testProperty "name" $ sigL (\h0 -> signal h0 (1 + 1)) === sigL (\h0 -> signal h0 1 >> signal h0 1)
testProperty "name" $ sigL (\h0 -> signal h0 (1 + 1)) === sigL (\h0 -> (signal h0 1) ||| (signal h0 1))
testProperty "name" $ \x -> sigL (\h0 -> signal h0 (1 + x)) === sigL (\h0 -> signal h0 1 >> signal h0 x)
testProperty "name" $ \x -> sigL (\h0 -> signal h0 (1 + x)) ->- sigL (\h0 -> signal h0 x >> signal h0 1)
testProperty "name" $ \x -> sigL (\h0 -> signal h0 (1 + x)) ->- sigL (\h0 -> (signal h0 1) ||| (signal h0 x))
testProperty "name" $ \x -> sigL (\h0 -> signal h0 (x + x)) === sigL (\h0 -> signal h0 x >> signal h0 x)
testProperty "name" $ \x -> sigL (\h0 -> signal h0 (x + x)) === sigL (\h0 -> (signal h0 x) ||| (signal h0 x))
testProperty "name" $ \x x1 -> sigL (\h0 -> signal h0 (x + x1)) ->- sigL (\h0 -> signal h0 x >> signal h0 x1)
testProperty "name" $ \x x1 -> sigL (\h0 -> signal h0 (x + x1)) ->- sigL (\h0 -> (signal h0 x) ||| (signal h0 x1))
