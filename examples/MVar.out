-- compact
 readMVar @  ===  readMVar @ >> readMVar @
 readMVar @  ===  (readMVar @) ||| (readMVar @)
 readMVar @  ->-  takeMVar @ >>= \x -> putMVar @ x
 takeMVar @  ===  readMVar @ >> takeMVar @
 takeMVar @  ->-  (readMVar @) ||| (takeMVar @)
 takeMVar @  ->-  (takeMVar @) ||| (readMVar @)
putMVar @ x  ->-  putMVar @ x >> readMVar @
putMVar @ x  ->-  (putMVar @ x) ||| (readMVar @)
putMVar @ x  ->-  (readMVar @) ||| (putMVar @ x)

-- plain
check $ sigL (\h0 -> readMVar h0) === sigL (\h0 -> readMVar h0 >> readMVar h0)
check $ sigL (\h0 -> readMVar h0) === sigL (\h0 -> (readMVar h0) ||| (readMVar h0))
check $ sigL (\h0 -> readMVar h0) ->- sigL (\h0 -> takeMVar h0 >>= \x -> putMVar h0 x)
check $ sigL (\h0 -> takeMVar h0) === sigL (\h0 -> readMVar h0 >> takeMVar h0)
check $ sigL (\h0 -> takeMVar h0) ->- sigL (\h0 -> (readMVar h0) ||| (takeMVar h0))
check $ sigL (\h0 -> takeMVar h0) ->- sigL (\h0 -> (takeMVar h0) ||| (readMVar h0))
check $ \x -> sigL (\h0 -> putMVar h0 x) ->- sigL (\h0 -> putMVar h0 x >> readMVar h0)
check $ \x -> sigL (\h0 -> putMVar h0 x) ->- sigL (\h0 -> (putMVar h0 x) ||| (readMVar h0))
check $ \x -> sigL (\h0 -> putMVar h0 x) ->- sigL (\h0 -> (readMVar h0) ||| (putMVar h0 x))

-- hunit/tasty
testProperty "name" $ sigL (\h0 -> readMVar h0) === sigL (\h0 -> readMVar h0 >> readMVar h0)
testProperty "name" $ sigL (\h0 -> readMVar h0) === sigL (\h0 -> (readMVar h0) ||| (readMVar h0))
testProperty "name" $ sigL (\h0 -> readMVar h0) ->- sigL (\h0 -> takeMVar h0 >>= \x -> putMVar h0 x)
testProperty "name" $ sigL (\h0 -> takeMVar h0) === sigL (\h0 -> readMVar h0 >> takeMVar h0)
testProperty "name" $ sigL (\h0 -> takeMVar h0) ->- sigL (\h0 -> (readMVar h0) ||| (takeMVar h0))
testProperty "name" $ sigL (\h0 -> takeMVar h0) ->- sigL (\h0 -> (takeMVar h0) ||| (readMVar h0))
testProperty "name" $ \x -> sigL (\h0 -> putMVar h0 x) ->- sigL (\h0 -> putMVar h0 x >> readMVar h0)
testProperty "name" $ \x -> sigL (\h0 -> putMVar h0 x) ->- sigL (\h0 -> (putMVar h0 x) ||| (readMVar h0))
testProperty "name" $ \x -> sigL (\h0 -> putMVar h0 x) ->- sigL (\h0 -> (readMVar h0) ||| (putMVar h0 x))
