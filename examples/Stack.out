            popLS :state:        is equivalent to        peekLS :state: >> popLS :state:
            popLS :state:        is equivalent to        popLS :state: >> peekLS :state:
            popLS :state:             refines            (popLS :state:) ||| (popLS :state:)
            popLS :state:        is equivalent to        (peekLS :state:) |+| (popLS :state:)
            popLS :state:             refines            (peekLS :state:) ||| (popLS :state:)
            popLS :state:        is equivalent to        (popLS :state:) |+| (peekLS :state:)
            popLS :state:             refines            (popLS :state:) ||| (peekLS :state:)
            popLS :state:             refines            (popLS :state:) ||| (whenJust pushLS :state: x)
            popLS :state:             refines            (whenJust pushLS :state: x) ||| (popLS :state:)
           peekLS :state:        is equivalent to        peekLS :state: >> peekLS :state:
           peekLS :state:             refines            (peekLS :state:) ||| (popLS :state:)
           peekLS :state:             refines            (popLS :state:) ||| (peekLS :state:)
           peekLS :state:        is equivalent to        (peekLS :state:) |+| (peekLS :state:)
           peekLS :state:        is equivalent to        (peekLS :state:) ||| (peekLS :state:)
           peekLS :state:             refines            (popLS :state:) ||| (whenJust pushLS :state: x)
           peekLS :state:             refines            (whenJust pushLS :state: x) ||| (popLS :state:)
           peekLS :state:             refines            (peekLS :state:) ||| (whenJust pushLS :state: x)
           peekLS :state:             refines            (whenJust pushLS :state: x) ||| (peekLS :state:)
           peekLS :state:             refines            popLS :state: >>= \x' -> whenJust pushLS :state: x'
whenJust pushLS :state: x        is equivalent to        peekLS :state: >> whenJust pushLS :state: x
whenJust pushLS :state: x        is equivalent to        whenJust pushLS :state: x >> peekLS :state:
whenJust pushLS :state: x             refines            (popLS :state:) ||| (whenJust pushLS :state: x)
whenJust pushLS :state: x             refines            (whenJust pushLS :state: x) ||| (popLS :state:)
whenJust pushLS :state: x        is equivalent to        (peekLS :state:) |+| (whenJust pushLS :state: x)
whenJust pushLS :state: x             refines            (peekLS :state:) ||| (whenJust pushLS :state: x)
whenJust pushLS :state: x        is equivalent to        (whenJust pushLS :state: x) |+| (peekLS :state:)
whenJust pushLS :state: x             refines            (whenJust pushLS :state: x) ||| (peekLS :state:)

            popCAS :state:        is equivalent to        peekCAS :state: >> popCAS :state:
            popCAS :state:        is equivalent to        popCAS :state: >> peekCAS :state:
            popCAS :state:             refines            (popCAS :state:) ||| (popCAS :state:)
            popCAS :state:        is equivalent to        (peekCAS :state:) |+| (popCAS :state:)
            popCAS :state:             refines            (peekCAS :state:) ||| (popCAS :state:)
            popCAS :state:        is equivalent to        (popCAS :state:) |+| (peekCAS :state:)
            popCAS :state:             refines            (popCAS :state:) ||| (peekCAS :state:)
            popCAS :state:             refines            (popCAS :state:) ||| (whenJust pushCAS :state: x)
            popCAS :state:             refines            (whenJust pushCAS :state: x) ||| (popCAS :state:)
           peekCAS :state:        is equivalent to        peekCAS :state: >> peekCAS :state:
           peekCAS :state:             refines            (peekCAS :state:) ||| (popCAS :state:)
           peekCAS :state:             refines            (popCAS :state:) ||| (peekCAS :state:)
           peekCAS :state:        is equivalent to        (peekCAS :state:) |+| (peekCAS :state:)
           peekCAS :state:        is equivalent to        (peekCAS :state:) ||| (peekCAS :state:)
           peekCAS :state:             refines            (popCAS :state:) ||| (whenJust pushCAS :state: x)
           peekCAS :state:             refines            (whenJust pushCAS :state: x) ||| (popCAS :state:)
           peekCAS :state:             refines            (peekCAS :state:) ||| (whenJust pushCAS :state: x)
           peekCAS :state:             refines            (whenJust pushCAS :state: x) ||| (peekCAS :state:)
           peekCAS :state:             refines            popCAS :state: >>= \x' -> whenJust pushCAS :state: x'
whenJust pushCAS :state: x        is equivalent to        peekCAS :state: >> whenJust pushCAS :state: x
whenJust pushCAS :state: x        is equivalent to        whenJust pushCAS :state: x >> peekCAS :state:
whenJust pushCAS :state: x             refines            (popCAS :state:) ||| (whenJust pushCAS :state: x)
whenJust pushCAS :state: x             refines            (whenJust pushCAS :state: x) ||| (popCAS :state:)
whenJust pushCAS :state: x        is equivalent to        (peekCAS :state:) |+| (whenJust pushCAS :state: x)
whenJust pushCAS :state: x             refines            (peekCAS :state:) ||| (whenJust pushCAS :state: x)
whenJust pushCAS :state: x        is equivalent to        (whenJust pushCAS :state: x) |+| (peekCAS :state:)
whenJust pushCAS :state: x             refines            (whenJust pushCAS :state: x) ||| (peekCAS :state:)

                                       popLS :state:        is equivalent to        popCAS :state:
                                      peekLS :state:        is equivalent to        peekCAS :state:
                                      popCAS :state:             refines            (popLS :state:) ||| (popLS :state:)
                                      popCAS :state:        is equivalent to        (peekLS :state:) |+| (popLS :state:)
                                      popCAS :state:             refines            (peekLS :state:) ||| (popLS :state:)
                                      popCAS :state:        is equivalent to        (popLS :state:) |+| (peekLS :state:)
                                      popCAS :state:             refines            (popLS :state:) ||| (peekLS :state:)
                                     peekCAS :state:             refines            (peekLS :state:) ||| (popLS :state:)
                                     peekCAS :state:             refines            (popLS :state:) ||| (peekLS :state:)
                                     peekCAS :state:        is equivalent to        (peekLS :state:) |+| (peekLS :state:)
                                     peekCAS :state:        is equivalent to        (peekLS :state:) ||| (peekLS :state:)
                                     peekCAS :state:             refines            popLS :state: >>= \x' -> whenJust pushLS :state: x'
                           whenJust pushLS :state: x        is equivalent to        whenJust pushCAS :state: x
                          whenJust pushCAS :state: x        is equivalent to        whenJust pushLS :state: x >> peekLS :state:
                      popLS :state: >> popLS :state:        is equivalent to        popCAS :state: >> popCAS :state:
                      popLS :state: >> popLS :state:        is equivalent to        (popCAS :state:) |+| (popCAS :state:)
                      popLS :state: >> popLS :state:             refines            (popCAS :state:) ||| (popCAS :state:)
                    popCAS :state: >> popCAS :state:             refines            (popLS :state:) ||| (popLS :state:)
                 (popLS :state:) |+| (popLS :state:)        is equivalent to        popCAS :state: >> popCAS :state:
                 (popLS :state:) |+| (popLS :state:)        is equivalent to        (popCAS :state:) |+| (popCAS :state:)
                 (popLS :state:) |+| (popLS :state:)             refines            (popCAS :state:) ||| (popCAS :state:)
                 (popLS :state:) ||| (popLS :state:)        is equivalent to        (popCAS :state:) ||| (popCAS :state:)
                (peekLS :state:) |+| (popLS :state:)             refines            (popCAS :state:) ||| (popCAS :state:)
                (peekLS :state:) |+| (popLS :state:)        is equivalent to        (peekCAS :state:) |+| (popCAS :state:)
                (peekLS :state:) |+| (popLS :state:)             refines            (peekCAS :state:) ||| (popCAS :state:)
                (peekLS :state:) |+| (popLS :state:)        is equivalent to        (popCAS :state:) |+| (peekCAS :state:)
                (peekLS :state:) |+| (popLS :state:)             refines            (popCAS :state:) ||| (peekCAS :state:)
                (peekLS :state:) ||| (popLS :state:)        is equivalent to        (peekCAS :state:) ||| (popCAS :state:)
                (peekLS :state:) ||| (popLS :state:)        is equivalent to        (popCAS :state:) ||| (peekCAS :state:)
                (popLS :state:) |+| (peekLS :state:)             refines            (popCAS :state:) ||| (popCAS :state:)
                (popLS :state:) |+| (peekLS :state:)        is equivalent to        (peekCAS :state:) |+| (popCAS :state:)
                (popLS :state:) |+| (peekLS :state:)             refines            (peekCAS :state:) ||| (popCAS :state:)
                (popLS :state:) |+| (peekLS :state:)        is equivalent to        (popCAS :state:) |+| (peekCAS :state:)
                (popLS :state:) |+| (peekLS :state:)             refines            (popCAS :state:) ||| (peekCAS :state:)
                (popLS :state:) ||| (peekLS :state:)        is equivalent to        (peekCAS :state:) ||| (popCAS :state:)
                (popLS :state:) ||| (peekLS :state:)        is equivalent to        (popCAS :state:) ||| (peekCAS :state:)
               (peekLS :state:) |+| (peekLS :state:)             refines            (peekCAS :state:) ||| (popCAS :state:)
               (peekLS :state:) |+| (peekLS :state:)             refines            (popCAS :state:) ||| (peekCAS :state:)
               (peekLS :state:) |+| (peekLS :state:)        is equivalent to        (peekCAS :state:) |+| (peekCAS :state:)
               (peekLS :state:) |+| (peekLS :state:)        is equivalent to        (peekCAS :state:) ||| (peekCAS :state:)
               (peekLS :state:) ||| (peekLS :state:)             refines            (peekCAS :state:) ||| (popCAS :state:)
               (peekLS :state:) ||| (peekLS :state:)             refines            (popCAS :state:) ||| (peekCAS :state:)
               (peekLS :state:) ||| (peekLS :state:)        is equivalent to        (peekCAS :state:) |+| (peekCAS :state:)
               (peekLS :state:) ||| (peekLS :state:)        is equivalent to        (peekCAS :state:) ||| (peekCAS :state:)
               (popCAS :state:) |+| (popCAS :state:)             refines            (popLS :state:) ||| (popLS :state:)
              (peekCAS :state:) |+| (popCAS :state:)             refines            (popLS :state:) ||| (popLS :state:)
              (peekCAS :state:) |+| (popCAS :state:)             refines            (peekLS :state:) ||| (popLS :state:)
              (peekCAS :state:) |+| (popCAS :state:)             refines            (popLS :state:) ||| (peekLS :state:)
              (popCAS :state:) |+| (peekCAS :state:)             refines            (popLS :state:) ||| (popLS :state:)
              (popCAS :state:) |+| (peekCAS :state:)             refines            (peekLS :state:) ||| (popLS :state:)
              (popCAS :state:) |+| (peekCAS :state:)             refines            (popLS :state:) ||| (peekLS :state:)
             (peekCAS :state:) |+| (peekCAS :state:)             refines            (peekLS :state:) ||| (popLS :state:)
             (peekCAS :state:) |+| (peekCAS :state:)             refines            (popLS :state:) ||| (peekLS :state:)
             (peekCAS :state:) |+| (peekCAS :state:)             refines            popLS :state: >>= \x' -> whenJust pushLS :state: x'
             (peekCAS :state:) ||| (peekCAS :state:)             refines            (peekLS :state:) ||| (popLS :state:)
             (peekCAS :state:) ||| (peekCAS :state:)             refines            (popLS :state:) ||| (peekLS :state:)
             (peekCAS :state:) ||| (peekCAS :state:)             refines            popLS :state: >>= \x' -> whenJust pushLS :state: x'
          popLS :state: >> whenJust pushLS :state: x        is equivalent to        popCAS :state: >> whenJust pushCAS :state: x
          popLS :state: >> whenJust pushLS :state: x             refines            (popCAS :state:) |+| (whenJust pushCAS :state: x)
          popLS :state: >> whenJust pushLS :state: x             refines            (whenJust pushCAS :state: x) |+| (popCAS :state:)
          whenJust pushLS :state: x >> popLS :state:             refines            (peekCAS :state:) ||| (popCAS :state:)
          whenJust pushLS :state: x >> popLS :state:             refines            (popCAS :state:) ||| (peekCAS :state:)
          whenJust pushLS :state: x >> popLS :state:        is equivalent to        whenJust pushCAS :state: x >> popCAS :state:
          whenJust pushLS :state: x >> popLS :state:             refines            (popCAS :state:) |+| (whenJust pushCAS :state: x)
          whenJust pushLS :state: x >> popLS :state:             refines            (whenJust pushCAS :state: x) |+| (popCAS :state:)
         whenJust pushLS :state: x >> peekLS :state:        is equivalent to        whenJust pushCAS :state: x >> peekCAS :state:
        popCAS :state: >> whenJust pushCAS :state: x             refines            (popLS :state:) |+| (whenJust pushLS :state: x)
        popCAS :state: >> whenJust pushCAS :state: x             refines            (whenJust pushLS :state: x) |+| (popLS :state:)
        whenJust pushCAS :state: x >> popCAS :state:             refines            (popLS :state:) |+| (whenJust pushLS :state: x)
        whenJust pushCAS :state: x >> popCAS :state:             refines            (whenJust pushLS :state: x) |+| (popLS :state:)
     (popLS :state:) |+| (whenJust pushLS :state: x)        is equivalent to        (popCAS :state:) |+| (whenJust pushCAS :state: x)
     (popLS :state:) |+| (whenJust pushLS :state: x)        is equivalent to        (whenJust pushCAS :state: x) |+| (popCAS :state:)
     (whenJust pushLS :state: x) |+| (popLS :state:)        is equivalent to        (popCAS :state:) |+| (whenJust pushCAS :state: x)
     (whenJust pushLS :state: x) |+| (popLS :state:)        is equivalent to        (whenJust pushCAS :state: x) |+| (popCAS :state:)
 popLS :state: >>= \x' -> whenJust pushLS :state: x'             refines            (peekCAS :state:) ||| (popCAS :state:)
 popLS :state: >>= \x' -> whenJust pushLS :state: x'             refines            (popCAS :state:) ||| (peekCAS :state:)
 popLS :state: >>= \x' -> whenJust pushLS :state: x'        is equivalent to        popCAS :state: >>= \x' -> whenJust pushCAS :state: x'
peekLS :state: >>= \x' -> whenJust pushLS :state: x'        is equivalent to        peekCAS :state: >>= \x' -> whenJust pushCAS :state: x'
